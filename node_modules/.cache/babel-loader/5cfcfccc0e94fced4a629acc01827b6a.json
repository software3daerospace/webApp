{"ast":null,"code":"var _jsxFileName = \"/home/maryem/app/3daerospace_App/src/pages/MapWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { MapContainer, TileLayer, Polygon, Marker, Popup, useMap } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from \"leaflet-geosearch\"; // import icon from \"./constants\";\n// import \"leaflet/dist/leaflet.css\";\n\nimport \"leaflet-geosearch/dist/geosearch.css\";\n/***  Author: Shreya BALACHANDRA ***/\n\n/***  Map Container ***/\n\n/***  route : /results  ***/\n\n/*** Input components :  MapContainer, TileLayer, Polygon, Marker, Popup , useMap from 'react-leaflet' package\n *                       GeoSearchControl, OpenStreetMapProvider from leaflet-geosearch package ***/\n\n/*** Output : Map section of results page ***/\n// Coordinates to the poligon tile of Marcillac\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst multiPolygon = [[[45.293062, -0.548343], [45.254466, -0.551089], [45.253258, -0.482425], [45.280562, -0.433501], [45.294209, -0.474185], [45.285997, -0.514011]]]; // Cordinates of Marcillac\n\nconst center = [45.269169177925754, -0.5231516014256281]; // Color given to the tile\n\nconst tileColor = {\n  color: 'white'\n};\n/***  Search feature on the map \n      - Create a GeoSearchControl object from leaflet-geosearch with provider object as OpenStreetMapProvider\n      - map is imported from useMap() hook of react-leaflet\n      - addControl function embeds the searchControl object created above which is used to display the result for searched city\n      - style - style of search bar ***/\n\nfunction LeafletgeoSearch() {\n  _s();\n\n  const map = useMap();\n  useEffect(() => {\n    const provider = new OpenStreetMapProvider();\n    const searchControl = new GeoSearchControl({\n      provider,\n      style: 'bar',\n      autoComplete: true,\n      marker: {\n        icon\n      }\n    });\n    map.addControl(searchControl);\n    return () => map.removeControl(searchControl);\n  }, []);\n  return null;\n}\n\n_s(LeafletgeoSearch, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n\n_c = LeafletgeoSearch;\n\nclass MapWrapper extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapid\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center,\n        zoom: 13,\n        scrollWheelZoom: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> \\xA9 <a href=\\\"http://cartodb.com/attributions\\\">CartoDB</a>\",\n          url: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LeafletgeoSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Polygon, {\n          pathOptions: tileColor,\n          positions: multiPolygon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [45.269169177925754, -0.5231516014256281],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                x: \"0px\",\n                y: \"0px\",\n                viewBox: \"0 0 100 100\",\n                enableBackground: \"new 0 0 100 100\",\n                xmlSpace: \"preserve\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M93,41.693v-9.941L36.767,19.717L7,32.371v10.22l3.869,1.393v38.088l-2.704-0.015v6.226h83.225v-5.756l-2.16-0.012V42.575  L93,41.693z M77.715,57.207V44.748l6.165,1.128v12.03L77.715,57.207z M83.88,64.129V76.16l-6.165-0.048V63.652L83.88,64.129z   M67.991,56.105V42.969l6.84,1.251V56.88L67.991,56.105z M74.831,63.429v12.661l-6.84-0.053V62.9L74.831,63.429z M57.15,54.876  v-13.89l7.633,1.396v13.359L57.15,54.876z M64.782,62.652v13.361l-7.633-0.059V62.062L64.782,62.652z M44.987,53.498V38.761  l8.569,1.568v14.14L44.987,53.498z M53.556,61.784v14.142l-8.569-0.066V61.121L53.556,61.784z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 131\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MapWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeafletgeoSearch\");","map":{"version":3,"sources":["/home/maryem/app/3daerospace_App/src/pages/MapWrapper.js"],"names":["React","useEffect","MapContainer","TileLayer","Polygon","Marker","Popup","useMap","GeoSearchControl","OpenStreetMapProvider","multiPolygon","center","tileColor","color","LeafletgeoSearch","map","provider","searchControl","style","autoComplete","marker","icon","addControl","removeControl","MapWrapper","Component","render"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport { MapContainer, TileLayer, Polygon, Marker, Popup , useMap } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from \"leaflet-geosearch\";\n// import icon from \"./constants\";\n// import \"leaflet/dist/leaflet.css\";\nimport \"leaflet-geosearch/dist/geosearch.css\";\n\n\n\n/***  Author: Shreya BALACHANDRA ***/\n/***  Map Container ***/\n/***  route : /results  ***/\n\n/*** Input components :  MapContainer, TileLayer, Polygon, Marker, Popup , useMap from 'react-leaflet' package\n *                       GeoSearchControl, OpenStreetMapProvider from leaflet-geosearch package ***/\n/*** Output : Map section of results page ***/\n\n\n\n\n// Coordinates to the poligon tile of Marcillac\nconst multiPolygon = [\n    [[45.293062, -0.548343],\n    [45.254466, -0.551089],\n    [45.253258, -0.482425],\n    [45.280562, -0.433501],\n    [45.294209, -0.474185],\n    [45.285997, -0.514011]\n    ]\n\n]\n// Cordinates of Marcillac\nconst center = [45.269169177925754, -0.5231516014256281]\n\n// Color given to the tile\nconst tileColor = { color: 'white' }\n\n/***  Search feature on the map \n      - Create a GeoSearchControl object from leaflet-geosearch with provider object as OpenStreetMapProvider\n      - map is imported from useMap() hook of react-leaflet\n      - addControl function embeds the searchControl object created above which is used to display the result for searched city\n      - style - style of search bar ***/\n      function LeafletgeoSearch() {\n    const map = useMap();\n    useEffect(() => {\n      const provider = new OpenStreetMapProvider();\n  \n      const searchControl = new GeoSearchControl({\n        provider,\n        style: 'bar',\n        autoComplete: true,\n        marker: {\n          icon\n        }\n      });\n  \n      map.addControl(searchControl);\n  \n      return () => map.removeControl(searchControl);\n    }, []);\n  \n    return null;\n  }\n\n\n\nclass MapWrapper extends React.Component {\n    render() {\n        return (\n            <div id=\"mapid\">\n                {/* Parent map container with following props: \n                    - center - coordinates to the city to be displayed\n                    - zoom - zoom level\n                    - scrollWheelZoom - boolean (true if scrollzoom feature is required) \n                */}\n                <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\n                    {/* TileLayer component - Imports OpenStreetMap API and the 'url' props imports the DarkMatter utility.*/}\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>'\n                        url='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n                    />\n                    <LeafletgeoSearch />\n                    {/* Draw polygon with the given city coordinates . pathOptions takes the color value and \n                    positions takes the array of coordinates for the polygon*/}\n                    <Polygon pathOptions={tileColor} positions={multiPolygon} />\n                    {/* Marker Component - Pins the location of specified coordinates */}\n                    <Marker position={[45.269169177925754, -0.5231516014256281]}>\n                        <Popup>\n                            <div>\n                                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 100 100\" xmlSpace=\"preserve\"><path d=\"M93,41.693v-9.941L36.767,19.717L7,32.371v10.22l3.869,1.393v38.088l-2.704-0.015v6.226h83.225v-5.756l-2.16-0.012V42.575  L93,41.693z M77.715,57.207V44.748l6.165,1.128v12.03L77.715,57.207z M83.88,64.129V76.16l-6.165-0.048V63.652L83.88,64.129z   M67.991,56.105V42.969l6.84,1.251V56.88L67.991,56.105z M74.831,63.429v12.661l-6.84-0.053V62.9L74.831,63.429z M57.15,54.876  v-13.89l7.633,1.396v13.359L57.15,54.876z M64.782,62.652v13.361l-7.633-0.059V62.062L64.782,62.652z M44.987,53.498V38.761  l8.569,1.568v14.14L44.987,53.498z M53.556,61.784v14.142l-8.569-0.066V61.121L53.556,61.784z\" /></svg>\n\n                            </div>\n                        </Popup>\n                    </Marker>\n                </MapContainer>\n            </div>\n        )\n    }\n}\n\nexport default MapWrapper;\n\n"]},"metadata":{},"sourceType":"module"}